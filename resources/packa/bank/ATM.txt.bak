思路：
   
   首先写bank.h文件，定义结构体Account，包含了账户的信息,
账户的信息有：id,username,password,money
   
   定义一个结构体Msg，包含消息类型和账户信息,#define定义
所有可能出现的消息类型，两个Key值用作创建消息队列，为了
避免重复定义，把key值定义在bank.c文件中

   写server.c，代表服务器端，需要三个函数:init函数用来
创建消息队列（msgget），destroy函数来删除消息队列（msgctl）,
start函数用来创建子进程（vfork）并使用execl调用其他文件。
   
    写客户端，需要定义一个函数，绘制字符界面，第二个函数
createUser来创建账户，获取消息队列（msgget），发送消息
到消息队列一(msgsnd)

   写open.c文件，获取消息队列,接收消息队列一中的消息，
判断消息类型，并调用相关的函数实现

   写dao.h来声明文件操作中的函数，dao.c实现文件操作的函数，
主要包括：generator_id()生成帐号，createUser函数保存账户
信息，结果返回给open.c文件中

   在open.c文件中给客户端发送消息到消息队列二，代表处理
结果，客户端接收消息队列二中的消息，并根据结果提示用户。

客串：
ubuntu下进行文件编码转换 （如将文件转为UTF8格式）

一般转换编码都是用iconv命令来转换，命令格式如下
    $iconv -f gb18030 -t utf-8 file1.txt > file2.txt
    说实话这个命令不好使，一方面容易重复转换，另一方面不支持通配符，无法成批转换，文件少了还好说，要是一大堆文件岂不是要累死？
    于是在google上淘宝，淘得一个更好的傻瓜型命令行工具enca，它不但能智能的识别文件的编码，而且还支持成批转换。
    1.安装
    $sudo apt-get install enca
    2.转换
    命令格式如下
    $enca -L 当前语言 -x 目标编码 文件名
    例如要把当前目录下的所有文件都转成utf-8
    $enca -L zh_CN -x utf-8 *
    很简单吧。
    不过用的时候发现有一部分文件无法传转，具体原因不祥，不过enca会把无法转换的文件告诉你的。对于这些不能转的文件，可以用gedit另存为的方式转，虽然这法笨点，但挺好使的。
